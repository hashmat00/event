
  <div id="page-preloader" style="z-index:99999999999999999999999">
    <div class="loader-ring"></div>
    <div class="loader-ring2"></div>
  </div>
  <div class="wrapper">    
    <% unless params[:browse] %>
    <% if @events.present? %>
      <div id="page-property-content">
        <div class="wide_container_3 carousel-full-width slider-kit">
          <div class="tabs">
            <div class="tab-content" id="tab-content_up">
              <%= render partial: "picture_container", locals: { events_pictures: @events_pictures} %>
            </div>
            <ul class="tab-links col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3">
              <li class="col-xs-4 event-index-tab"><a id="left-carosusel" href="#myCarousel" data-slide="prev" onclick="$('.titleHeader').css('z-index','9999');"><span class="glyphicon glyphicon-arrow-left"></span></a></li>
              <li class="active col-xs-4 event-index-tab"><a href="javascript:void(0)" onclick='$("#left-carosusel").attr("href", "#myCarousel");$("#right-carosusel").attr("href", "#myCarousel");tabRequest(4);'><span style="" class="glyphicon glyphicon-camera glf-icon"></span>Photo</a></li>
              <li class="col-xs-4 event-index-tab"><a href="javascript:void(0)" onclick='$("#left-carosusel").attr("href","#myCarousel1");$("#right-carosusel").attr("href", "#myCarousel1");tabRequest(5);' ><span class="glyphicon glyphicon-facetime-video glf-icon"></span>Videos</a></li>
              <li class="col-xs-4 event-index-tab"><a href="javascript:void(0)" class="map4" onclick='$("#left-carosusel").attr("href", "#myCarousel2");$("#right-carosusel").attr("href", "#myCarousel2");tabRequest(6);'><span class="glyphicon glyphicon-map-marker glf-icon"></span>Map</a></li>
              <li class="col-xs-4 event-index-tab"><a href="javascript:void(0)" onclick='$("#left-carosusel").attr("href", "#myCarousel3");$("#right-carosusel").attr("href", "#myCarousel3");tabRequest(7);' ><span class="glyphicon glyphicon-road glf-icon"></span>Street View</a></li>
              <li class="col-xs-4"><a id="right-carosusel" href="#myCarousel" data-slide="next" onclick="$('.titleHeader').css('z-index','9999');"><span class="glyphicon glyphicon-arrow-right"></span></a></li>
            </ul>
          </div>
        </div>
      </div>
    <% end %>
    <% end %>
    <div id="page-content-search">
      <div class="container">
        <div class="wide_container_2">
          <div class="tabs">
            <header class="col-md-8 col-xs-12 no-pad">
              <div class="col-sm-1 col-xs-1" style="font-size: 25px; padding: 20px 0 0 60px;">
                  <span class="glyphicon glyphicon-map-marker"></span>
                </div>
              <%= form_for @tab, method: :get, remote:true, id: "filterForm" do |f| %>  
                <%= render partial: "events/event_filter", locals: {f: f} %>
              <% end %>
              <div class="row" id="tab-content-result">
                <%= render partial: "event_result_title", locals: { events: @events } %>
              </div><!-- row -->
            </div>  <!-- explore_grid -->
            <div class="tab-content" id="tab-content">
              <%= render partial: "map", locals: {events: @events} %>
            </div><!-- tab-content -->
          </div><!-- tabs -->
          <div class="col-xs-12">
            <div class="col-md-10 col-md-offset-1 col-xs-12">
              <nav class="site-navigation paging-navigation navbar" style="z-index: 10 !important">
                <div class="row">
                  <div class="col-md-4 col-md-offset-4 center">
                    <%#= will_paginate @events %>
                  </div>
                </div>
              </nav>
            </div>
          </div>
        </div>
      </div>
    </div><!-- end Page Content -->
  </div>
<style>
.slider-kit .col-xs-4
{
  width:16.5% !important;
}

.col-lg-offset-4 {
    margin-left:0 !important;
}
.col-lg-4 {
    width: 100%;
    padding:10px;
}
.glf-icon
{
  padding:0px 15px !important;
}

.owl-theme .owl-controls {
    background: white none repeat scroll 0 0;
    margin-top: -25px;
    text-align: center;
    z-index: 9999999;
}
#page-content-search .container .wide_container_2 .tabs {
  display: block !important;
  }

.placeSearch
{
  width:100%!important;
  height: 70px !important ;
}
#pac-input
{
  z-index: 999999999999999999999 !important;
}
.btn-group {
    margin: 15px !important;
    padding: 15px !important;
}
label
{
   padding: 10px 30px !important;
   margin: 20px 10px !important;
   width: 100% !important;
}
.select2 
  {
    width: 100% !important;
  }

  .wide-2 .btn {
      padding: 10px 45px !important;
      width: auto !important;
      margin: 60px 12px 30px !important;
  }

</style>

<script type="text/javascript">
  function tabRequest(id){
    $.ajax({
      type:'GET',
      url: '/events/tabs',
      dataType: 'script',
      data: $.param({ tab: id})
    });
  };

</script>
<script>
  $(function() {
    $("#start_date").datetimepicker({
        format: 'YYYY-MM-DD HH:mm:ss'
    });
     $("#end_date").datetimepicker({
        format: 'YYYY-MM-DD HH:mm:ss'
    });
  });
</script>

<script type="text/javascript">
  $('input[name=locationFilter]:checked', '#locationFilter').val();
</script>
<script type="text/javascript">
  $( "#event_categories_filter" ).select2();
  $( "#event_type_filter" ).select2();
</script>
<script type="text/javascript">
  $(".distance-input").ionRangeSlider({
    type: "single",
    min: 0,
    max: 10000,
    from: 100,
    to: 100,
    keyboard: true,
    step: 10,
    grid: true,
    force_edges: true,
    onStart: function (data) {
        console.log("onStart");
    },
    onChange: function (data) {
        console.log("onChange");
    },
    onFinish: function (data) {
        console.log("onFinish");
        $('#filterFormSubmit').click();
    },
    onUpdate: function (data) {
        console.log("onUpdate");
    }
});

</script>
<script type="text/javascript">
  $(".price-input").ionRangeSlider({
    type: "double",
    min: 0,
    max: 100000,
    from: 100,
    to: 100,
    keyboard: true,
    step: 10,
    grid: true,
    force_edges: true,
    onStart: function (data) {
        console.log("onStart");
    },
    onChange: function (data) {
        console.log("onChange");
    },
    onFinish: function (data) {
        console.log("onFinish");
        $('#filterFormSubmit').click();
    },
    onUpdate: function (data) {
        console.log("onUpdate");
    }
});

</script>
<script type="text/javascript">
  $(document).ready(function(){
    $('#mapView').click();
  });
</script>
<script type="text/javascript">
  
        var map;
      
        function initMap() {
          
          var myOptionsB = {
              zoom: 14,
              center: {lat: 28.5910985, lng: 77.2252626},
              mapTypeId: google.maps.MapTypeId.ROADMAP
          }
          map = new google.maps.Map(document.getElementById("map"), myOptionsB);
        
        var input = /** @type {!HTMLInputElement} */(
            document.getElementById('pac-input'));

        var types = document.getElementById('type-selector');
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);

        var infowindow = new google.maps.InfoWindow();
        var marker = new google.maps.Marker({
          map: map,
          anchorPoint: new google.maps.Point(0, -29)
        });

        autocomplete.addListener('place_changed', function() {
          infowindow.close();
          marker.setVisible(false);
          var place = autocomplete.getPlace();
          if (!place.geometry) {
            window.alert("Autocomplete's returned place contains no geometry");
            return;
          }

          // If the place has a geometry, then present it on a map.
          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
            $("#location_filter").val(place.formatted_address); 
            $("#customLocationOn").click();


            // $.ajax({
            //   type:'GET',
            //   url: '/tabs',
            //   dataType: 'script',
            //   data: $.param({ lat: place.geometry.location.lat(), long: place.geometry.location.lng(), tab: })
            // });

          } else {

            map.setCenter(place.geometry.location);
            map.setZoom(17);  // Why 17? Because it looks good.
          }
          marker.setIcon(/** @type {google.maps.Icon} */({
            url: place.icon,
            size: new google.maps.Size(71, 71),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(17, 34),
            scaledSize: new google.maps.Size(35, 35)
          }));
          marker.setPosition(place.geometry.location);
          marker.setVisible(true);

          var address = '';
          if (place.address_components) {
            console.log(place.geometry.location.G); // Get Latitude
console.log(place.geometry.location.K); // Get Longitude

//Additional information
console.log(place.formatted_address); // Formated Address of Place
console.log(place.name); // Name of Place
            address = [
              (place.address_components[0] && place.address_components[0].short_name || ''),
              (place.address_components[1] && place.address_components[1].short_name || ''),
              (place.address_components[2] && place.address_components[2].short_name || '')
            ].join(' ');
          }

          infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
          infowindow.open(map, marker);
        });

        // Sets a listener on a radio button to change the filter type on Places
        // Autocomplete.
        function setupClickListener(id, types) {
          var radioButton = document.getElementById(id);
          radioButton.addEventListener('click', function() {
            autocomplete.setTypes(types);
          });
        }

        setupClickListener('changetype-all', []);
        setupClickListener('changetype-address', ['address']);
        setupClickListener('changetype-establishment', ['establishment']);
        setupClickListener('changetype-geocode', ['geocode']);
     } 

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDl8KUzAOcfadtLw7_wkJ_NyoD5vDz3_74&callback=initMap&libraries=places" async defer></script>
